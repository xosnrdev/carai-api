name: Run Tests and Linting

# Triggers the workflow on push or pull request events to the master branch,
# and on pull request events to the development branch
on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development
      - master
  # Allows manual triggering of the workflow
  workflow_dispatch:

# Defines a single job called build-and-test
jobs:
  build-and-test:
    # Specifies that the job runs on the latest Ubuntu runner
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        # Checks out the repository content to the GitHub Actions runner
        uses: actions/checkout@v4

      - name: Setup Node.js
        # Sets up a Node.js environment with the specified version
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache Node Modules
        # Caches the Node modules to speed up subsequent runs
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        # Installs Node.js dependencies using npm ci
        run: npm ci

      - name: Setup Python
        # Sets up a Python environment with the specified version
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.8"

      - name: Run Tests
        # Executes the test command
        run: npm run test:ci

      - name: Upload Coverage to Codecov
        # Uploads code coverage reports to Codecov
        # This step only runs if the previous steps succeed
        if: success()
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Failure Notification
        # Sends a failure notification if any of the previous steps fail
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issueTitle = `Workflow failed: ${process.env.GITHUB_WORKFLOW}, Run ID: ${process.env.GITHUB_RUN_ID}`;
            const issueBody = `A failure occurred in the workflow [${process.env.GITHUB_WORKFLOW}](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}). Please investigate.`;
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody
            });
