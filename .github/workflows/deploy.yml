name: AWS ECR and ECS Deployment Pipeline

on:
  workflow_run:
    workflows: ["CI - Build and Test Suite"]
    types: [completed]
  workflow_dispatch:

env:
  PORT: ${{ secrets.PORT }}
  RATE_LIMIT_WINDOW_MS: ${{ secrets.RATE_LIMIT_WINDOW_MS }}
  RATE_LIMIT_MAX: ${{ secrets.RATE_LIMIT_MAX }}
  NODE_ENV: ${{ secrets.NODE_ENV }}
  NODE_OPTIONS: ${{ secrets.NODE_OPTIONS }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
  ECS_SERVICE: ${{ secrets.ECS_SERVICE }}
  AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
  GITHUB_TOKEN: ${{ secrets.ACCESS_GITHUB_TOKEN }}

permissions:
  id-token: write
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  build-and-deploy:
    name: Build, Tag, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker-compose build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.AWS_ROLE_ARN }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Release Drafter: Draft the release notes
      - name: Release Drafter
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Generate and publish conventional changelog
      - name: Generate and Publish Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v4
        with:
          github-token: ${{ env.GITHUB_TOKEN }}

        # Create or update CHANGELOG.md
      - name: Create or Update CHANGELOG.md
        if: steps.changelog.outputs.version != ''
        run: |
          echo "${{ steps.changelog.outputs.changelog }}" > CHANGELOG.md

      # Commit CHANGELOG.md to the repository
      - name: Stage and Commit Changes
        if: steps.changelog.outputs.version != '' && github.ref == 'refs/heads/master'
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add CHANGELOG.md package.json
          git commit -m "Update version and CHANGELOG for ${{ steps.changelog.outputs.version }}" || echo "No changes to commit."
          git push

      # Create and publish GitHub Release
      - name: Create and Publish GitHub Release
        if: steps.changelog.outputs.version != ''
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.ACCESS_GITHUB_TOKEN }}
          tag: ${{ steps.changelog.outputs.version }}
          name: Release ${{ steps.changelog.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          skipIfReleaseExists: true

      - name: Tag and Push Docker Image to ECR
        if: steps.changelog.outputs.version != ''
        run: |
          IMAGE_TAG=${{ steps.changelog.outputs.version }}
          FULL_IMAGE_NAME="${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}"
          docker tag ${{ env.ECR_REPOSITORY }}:latest $FULL_IMAGE_NAME:$IMAGE_TAG
          docker push $FULL_IMAGE_NAME:$IMAGE_TAG

      - name: Deploy Updated Image to Amazon ECS
        if: steps.changelog.outputs.version != ''
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE }} --force-new-deployment
